# Generated by Django 4.0.7 on 2022-09-08 09:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=15, unique=True, verbose_name='Số điện thoại')),
                ('fullname', models.CharField(max_length=30, null=True, verbose_name='Tên khách hàng')),
                ('gender', models.CharField(choices=[('M', 'Nam'), ('F', 'Nữ'), ('U', 'Không xác định')], default='U', max_length=1, verbose_name='Giới tính')),
                ('address', models.CharField(max_length=255, null=True, verbose_name='Địa chỉ')),
                ('note', models.TextField(blank=True, verbose_name='Ghi chú')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='CalculationUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Tên đơn vị tính')),
            ],
            options={
                'db_table': 'CalculationUnit',
            },
        ),
        migrations.CreateModel(
            name='CustomerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Tên nhóm khách hàng')),
                ('description', models.TextField(verbose_name='Mô tả nhóm khách hàng')),
                ('note', models.TextField(blank=True, verbose_name='Ghi chú')),
            ],
            options={
                'db_table': 'CustomerGroup',
            },
        ),
        migrations.CreateModel(
            name='HierarchyTree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Tên cấp')),
                ('level', models.IntegerField(default=0, verbose_name='Cấp')),
                ('type', models.CharField(choices=[('product', 'Sản phẩm')], max_length=15, verbose_name='Loại')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='management.hierarchytree')),
            ],
            options={
                'db_table': 'HierarchyTree',
            },
        ),
        migrations.CreateModel(
            name='InventoryReceivingVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Chờ xác nhận'), ('complete', 'Hoàn thành'), ('cancel', 'Hủy')], max_length=15, verbose_name='Trạng thái')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('total', models.FloatField(verbose_name='Thành tiền')),
            ],
            options={
                'db_table': 'InventoryReceivingVoucher',
            },
        ),
        migrations.CreateModel(
            name='InventoryVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('status', models.CharField(choices=[('pending', 'Chờ xác nhận'), ('complete', 'Hoàn thành'), ('cancel', 'Hủy')], max_length=15, verbose_name='Trạng thái')),
            ],
            options={
                'db_table': 'InventoryVoucher',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('total', models.FloatField(default=0, verbose_name='Thành tiền')),
                ('status', models.CharField(choices=[('pending', 'Đang chờ'), ('complete', 'Hoàn tất'), ('cancel', 'Đã hủy đơn / hoàn trả')], default='pending', max_length=15, verbose_name='Trạng thái')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Order',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Số lượng')),
                ('total', models.FloatField(default=0, verbose_name='Thành tiền')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.order')),
            ],
            options={
                'db_table': 'OrderDetail',
            },
        ),
        migrations.CreateModel(
            name='OrderRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.order')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'OrderRefund',
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('name', models.CharField(default='', max_length=50, verbose_name='Tên bảng giá')),
                ('price_list_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Mã bảng giá')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Thời gian bắt đâu áp dụng bảng giá', verbose_name='Thời gian bắt đầu')),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Thời gian kết thúc áp dụng bảng giá', verbose_name='Thời gian kết thúc')),
                ('status', models.BooleanField(default=True, verbose_name='Trạng thái')),
            ],
            options={
                'db_table': 'PriceList',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=15, unique=True, verbose_name='Mã sản phẩm')),
                ('name', models.CharField(max_length=255, verbose_name='Tên sản phẩm')),
                ('description', models.TextField(verbose_name='Mô tả sản phẩm')),
                ('image', models.CharField(blank=True, max_length=255, verbose_name='Hình ảnh sản phẩm')),
                ('barcode', models.CharField(max_length=15, verbose_name='Mã vạch')),
                ('barcode_image', models.CharField(max_length=255, verbose_name='Ảnh mã vạch')),
                ('base_unit', models.ForeignKey(help_text='Đơn vị cơ bản', null=True, on_delete=django.db.models.deletion.CASCADE, to='management.calculationunit', verbose_name='Đơn vị cơ bản')),
                ('product_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='management.hierarchytree')),
            ],
            options={
                'db_table': 'Product',
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_group_code', models.CharField(max_length=15, unique=True, verbose_name='Mã nhóm sản phẩm')),
                ('name', models.CharField(max_length=255, verbose_name='Tên nhóm sản phẩm')),
                ('description', models.TextField(help_text='Mô tả của nhóm sản phẩm', verbose_name='Mô tả nhóm sản phẩm')),
                ('note', models.TextField(help_text='Ghi chú nội bộ', verbose_name='Ghi chú')),
            ],
            options={
                'db_table': 'ProductGroup',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tiêu đề của chương trình khuyến mãi')),
                ('description', models.TextField(default='', verbose_name='Mô tả chương trình khuyến mãi')),
                ('image', models.CharField(max_length=255, verbose_name='Hình ảnh')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian bắt đầu áp dụng')),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian kết thúc')),
                ('status', models.BooleanField(verbose_name='Trạng thái')),
                ('applicable_customer_groups', models.ManyToManyField(db_table='ApplicableCustomerGroup', to='management.customergroup')),
            ],
            options={
                'db_table': 'Promotion',
            },
        ),
        migrations.CreateModel(
            name='PromotionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotion_code', models.CharField(max_length=15, null=True, verbose_name='Mã khuyến mãi')),
                ('type', models.CharField(choices=[('Product', 'Khuyến mãi sản phẩm'), ('Percent', 'Khuyến mãi theo phần trăm hóa đơn'), ('Fixed', 'Khuyến mãi số tiền nhất định')], max_length=15, verbose_name='Loại khuyến mãi')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian bắt đầu áp dụng')),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian kết thúc')),
                ('status', models.BooleanField(verbose_name='Trạng thái')),
                ('max_quantity', models.IntegerField(null=True, verbose_name='Số lần áp dụng tối đa')),
                ('max_quantity_per_customer', models.IntegerField(null=True, verbose_name='Số lần áp dụng tối đa trên khách hàng')),
                ('max_quantity_per_customer_per_day', models.IntegerField(null=True, verbose_name='Số lần áp dụng tối đa trên khách hàng trên 1 ngày')),
                ('quantity_buy', models.PositiveIntegerField(null=True, verbose_name='Số lượng sản phẩm cần mua')),
                ('quantity_received', models.PositiveIntegerField(null=True, verbose_name='Số lượng sản phẩm được nhận')),
                ('minimum_total', models.FloatField(null=True, verbose_name='Số tiền tối thiểu trên hóa đơn')),
                ('percent', models.FloatField(null=True, verbose_name='Phần trăm giảm giá')),
                ('maximum_reduction_amount', models.FloatField(null=True, verbose_name='Số tiền được giảm tối đa')),
                ('reduction_amount', models.FloatField(null=True, verbose_name='Số tiền được giảm')),
                ('applicable_product_groups', models.ManyToManyField(db_table='ApplicableProductGroup', to='management.productgroup')),
                ('applicable_products', models.ManyToManyField(db_table='ApplicableProduct', to='management.product')),
                ('promotion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='management.promotion')),
            ],
            options={
                'db_table': 'PromotionDetail',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tên nhà cung cấp')),
                ('phone', models.CharField(max_length=15, verbose_name='Số điện thoại')),
                ('email', models.CharField(max_length=50, verbose_name='Địa chỉ email')),
                ('address', models.CharField(max_length=255, verbose_name='Địa chỉ')),
                ('note', models.TextField(help_text='Ghi chú nội bộ', verbose_name='Ghi chú')),
            ],
            options={
                'db_table': 'Supplier',
            },
        ),
        migrations.CreateModel(
            name='UnitExchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(help_text='Đơn vị này bằng bao nhiêu đơn vị mặc định?', verbose_name='Giá trị quy đổi')),
                ('allow_sale', models.BooleanField(help_text='Cho phép bán hàng bằng đơn vị này không?', verbose_name='Đơn vị được phép bán hàng')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unitexchanges', to='management.product')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unitexchanges', to='management.calculationunit')),
            ],
            options={
                'db_table': 'UnitExchange',
            },
        ),
        migrations.CreateModel(
            name='WarehouseTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=30, null=True, verbose_name='Hóa đơn hoặc mã phiếu')),
                ('change', models.IntegerField(verbose_name='Thay đổi')),
                ('type', models.CharField(choices=[('order', 'Bán hàng'), ('inventory', 'Kiểm kê'), ('inventory_receiving', 'Nhập hàng'), ('refund', 'Trả hàng')], max_length=30, verbose_name='Loại biến động')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Ngày tạo')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.product')),
                ('unit_exchange', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='management.unitexchange')),
            ],
            options={
                'db_table': 'WarehouseTransaction',
            },
        ),
        migrations.CreateModel(
            name='PromotionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reduction_quantity', models.PositiveIntegerField(default=0, null=True, verbose_name='Số lượng sản phẩm được nhận')),
                ('reduction_amount', models.FloatField(null=True, verbose_name='Số tiền được giảm')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Ngày tạo')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='management.order')),
                ('order_detail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='management.orderdetail')),
                ('promotion_detail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='management.promotiondetail')),
            ],
            options={
                'db_table': 'PromotionHistory',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_groups',
            field=models.ManyToManyField(db_table='ProductGroupDetail', related_name='products', to='management.productgroup'),
        ),
        migrations.CreateModel(
            name='PriceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0, verbose_name='Giá bán')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian bắt đầu')),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian kết thúc')),
                ('pricelist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.pricelist')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pricedetails', to='management.product', verbose_name='Sản phẩm')),
                ('unit_exchange', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pricedetails', to='management.unitexchange', verbose_name='Đơn vị tính')),
            ],
            options={
                'db_table': 'PriceDetail',
            },
        ),
        migrations.CreateModel(
            name='OrderRefundDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Số lượng')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('order_refund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.orderrefund')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.product')),
                ('unit_exchange', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='management.unitexchange', verbose_name='Đơn vị tính')),
            ],
            options={
                'db_table': 'OrderRefundDetail',
            },
        ),
        migrations.AddField(
            model_name='orderdetail',
            name='price',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.pricedetail'),
        ),
        migrations.AddField(
            model_name='orderdetail',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.product'),
        ),
        migrations.AddField(
            model_name='orderdetail',
            name='unit_exchange',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='management.unitexchange', verbose_name='Đơn vị tính'),
        ),
        migrations.CreateModel(
            name='InventoryVoucherDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_before', models.PositiveIntegerField(verbose_name='Số lượng trước')),
                ('quantity_after', models.PositiveIntegerField(verbose_name='Số lượng sau')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('inventory_voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.inventoryvoucher')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.product')),
                ('unit_exchange', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='management.unitexchange')),
            ],
            options={
                'db_table': 'InventoryVoucherDetail',
            },
        ),
        migrations.CreateModel(
            name='InventoryReceivingVoucherDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Số lượng')),
                ('price', models.FloatField(verbose_name='Giá nhập')),
                ('note', models.TextField(verbose_name='Ghi chú')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.product')),
                ('receiving_voucher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.inventoryreceivingvoucher')),
                ('unit_exchange', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='management.unitexchange')),
            ],
            options={
                'db_table': 'InventoryReceivingVoucherDetail',
            },
        ),
        migrations.AddField(
            model_name='inventoryreceivingvoucher',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='management.supplier'),
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_name', models.CharField(max_length=50, verbose_name='Tên đối tượng')),
                ('object_id', models.CharField(max_length=50, verbose_name='Mã đối tượng')),
                ('action', models.CharField(choices=[('CREATE', 'Tạo mới'), ('UPDATE', 'Cập nhật'), ('DELETE', 'Xóa')], max_length=15, verbose_name='Hành động')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Ngày tạo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Người thực hiện')),
            ],
            options={
                'db_table': 'History',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='customer_group',
            field=models.ManyToManyField(db_table='CustomerGroupDetail', to='management.customergroup'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
